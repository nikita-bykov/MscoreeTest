# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:

- powershell: |
   $vsProgramData = Get-Item -Path "C:\ProgramData\Microsoft\VisualStudio\Packages\_Instances"
   $instanceFolders = Get-ChildItem -Path $vsProgramData.FullName
   $catalogContent = Get-Content -Path ($instanceFolders.FullName + '\catalog.json')
   $catalog = $catalogContent | ConvertFrom-Json
   $version = $catalog.info.id
   Write-Host "Visual Studio version ${version} installed"
  displayName: 'Check version of Visual Studio'
- powershell: |
   Start-Process -Wait -FilePath  "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" -ArgumentList "update --passive --norestart --installpath ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"""
  displayName: 'Update Visual Studio'
- powershell: |
   $vsProgramData = Get-Item -Path "C:\ProgramData\Microsoft\VisualStudio\Packages\_Instances"
   $instanceFolders = Get-ChildItem -Path $vsProgramData.FullName
   $catalogContent = Get-Content -Path ($instanceFolders.FullName + '\catalog.json')
   $catalog = $catalogContent | ConvertFrom-Json
   $version = $catalog.info.id
   Write-Host "Visual Studio version ${version} installed"
  displayName: 'Check version of Visual Studio'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- powershell: 'Get-ChildItem Env:'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
