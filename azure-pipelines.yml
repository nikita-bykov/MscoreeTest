# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:
- powershell: |
   $BootstrapperUrl = "https://aka.ms/vs/16/pre/vs_Enterprise.exe"
   
   $WorkLoads =    '--allWorkloads --includeRecommended ' + `
                   '--add Microsoft.Net.Component.4.6.2.SDK ' + `
                   '--add Microsoft.Net.Component.4.6.2.TargetingPack ' + `
                   '--add Microsoft.Net.ComponentGroup.4.6.2.DeveloperTools ' + `
                   '--add Microsoft.Net.Component.4.7.SDK ' + `
                   '--add Microsoft.Net.Component.4.7.TargetingPack ' + `
                   '--add Microsoft.Net.ComponentGroup.4.7.DeveloperTools ' + `
                   '--add Microsoft.Net.Component.4.7.1.SDK ' + `
                   '--add Microsoft.Net.Component.4.7.1.TargetingPack ' + `
                   '--add Microsoft.Net.ComponentGroup.4.7.1.DeveloperTools ' + `
                   '--add Microsoft.Net.Component.4.7.2.SDK ' + `
                   '--add Microsoft.Net.Component.4.7.2.TargetingPack ' + `
                   '--add Microsoft.Net.ComponentGroup.4.7.2.DeveloperTools ' + `
                   '--add Microsoft.Net.Core.Component.SDK.1x ' + `
                   '--add Microsoft.NetCore.1x.ComponentGroup.Web ' + `
                   '--add Microsoft.VisualStudio.Component.Azure.Storage.AzCopy ' + `
                   '--add Microsoft.VisualStudio.Component.PowerShell.Tools ' + `
                   '--add Microsoft.VisualStudio.Component.VC.140 ' + `
                   '--add Component.Dotfuscator ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ATL ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ATL.ARM ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ATL.ARM64 ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ATLMFC ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ClangC2 ' + `
                   '--add Microsoft.VisualStudio.Component.VC.CLI.Support ' + `
                   '--add Microsoft.VisualStudio.Component.VC.Modules.x86.x64 ' + `
                   '--add Microsoft.VisualStudio.Component.Windows10SDK.10240 ' + `
                   '--add Microsoft.VisualStudio.Component.Windows10SDK.10586 ' + `
                   '--add Microsoft.VisualStudio.Component.Windows10SDK.14393 ' + `
                   '--add Microsoft.VisualStudio.Component.Windows10SDK.15063.Desktop ' + `
                   '--add Microsoft.VisualStudio.Component.TestTools.WebLoadTest ' + `
                   '--add Microsoft.VisualStudio.Web.Mvc4.ComponentGroup ' + `
                   '--add Component.Linux.CMake ' + `
                   '--add Microsoft.Component.VC.Runtime.OSSupport ' + `
                   '--add Microsoft.VisualStudio.Component.VC.Tools.ARM ' + `
                   '--add Microsoft.VisualStudio.ComponentGroup.UWP.VC ' + `
                   '--add Microsoft.VisualStudio.Component.VSSDK ' + `
                   '--add Microsoft.VisualStudio.Component.VC.Tools.ARM64 ' + `
                   '--add Microsoft.VisualStudio.Component.Windows10SDK.16299.Desktop.arm ' + `
                   '--add Microsoft.VisualStudio.Component.DslTools ' + `
                   '--add Microsoft.VisualStudio.Component.Windows81SDK ' + `
                   '--add Microsoft.VisualStudio.ComponentGroup.NativeDesktop.Win81 ' + `
                   '--add Microsoft.VisualStudio.ComponentGroup.NativeDesktop.WinXP ' + `
                   '--add Microsoft.VisualStudio.ComponentGroup.ArchitectureTools.Managed ' + `
                   '--add Microsoft.Component.VC.Runtime.UCRTSDK ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ATL.Spectre ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ATL.ARM.Spectre ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ATL.ARM64.Spectre ' + `
                   '--add Microsoft.VisualStudio.Component.VC.ATLMFC.Spectre ' + `
                   '--add Microsoft.VisualStudio.Component.Windows10SDK.17134 ' + `
                   '--add Microsoft.VisualStudio.Component.Windows10SDK.17763 ' + `
                   '--add Microsoft.VisualStudio.Component.VC.Runtimes.x86.x64.Spectre '+ `
                   '--add Microsoft.VisualStudio.Component.VC.Runtimes.ARM.Spectre ' + `
                   '--add Microsoft.VisualStudio.Component.VC.Runtimes.ARM64.Spectre ' + `
   
   Write-Host "Downloading Bootstrapper ..."
   $BootstrapperName = [IO.Path]::GetFileName($BootstrapperUrl)
   $filePath = Join-Path -Path "${env:Temp}" -ChildPath $BootstrapperName
   (New-Object System.Net.WebClient).DownloadFile($BootstrapperUrl, $filePath)
   
   Write-Host "Enable short name support on Windows needed for Xamarin Android AOT, defaults appear to have been changed in Azure VMs"
   $shortNameEnableProcess = Start-Process -FilePath fsutil.exe -ArgumentList ('8dot3name', 'set', '0') -Wait -PassThru
   
   $shortNameEnableExitCode = $shortNameEnableProcess.ExitCode
   if ($shortNameEnableExitCode -ne 0)
   {
       Write-Host "Enabling short name support on Windows failed. This needs to be enabled prior to VS 2017 install for Xamarin Andriod AOT to work."
       exit $shortNameEnableExitCode
   }
   
   Write-Host "Starting Install ..."
   $bootstrapperArgumentList = ('/c', $filePath, $WorkLoads, '--quiet', '--norestart', '--wait', '--nocache' )
   $process = Start-Process -FilePath cmd.exe -ArgumentList $bootstrapperArgumentList -Wait -PassThru
   
   $exitCode = $process.ExitCode
   if ($exitCode -eq 0 -or $exitCode -eq 3010)
   {
       Write-Host "Installation successful"
       return $exitCode
   }
   else
   {
       Write-Host "Non zero exit code returned by the installation process : $exitCode"
       exit $exitCode
   }
  displayName: 'Install Visual Studio'


- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- powershell: 'Get-ChildItem Env:'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
